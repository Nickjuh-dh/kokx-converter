<?php
/**
 * This file is part of Kokx's CR Converter.
 *
 * Kokx's CR Converter is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Kokx's CR Converter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Kokx's CR Converter.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @category   KokxConverter
 * @license    http://www.gnu.org/licenses/gpl.txt
 * @copyright  Copyright (c) 2009 Kokx
 * @package    Kokx_Render
 */


function stringnumFormat($number, $decimals = 0, $decPoint = '.', $thousandsSep = ',')
{
    if (is_int($number) || is_float($number)) {
        return number_format($number, $decimals, $decPoint, $thousandsSep);
    } elseif (is_string($number)) {
        $number = explode('.', $number);

        $num       = strrev($number[0]);
        $number[0] = '';

        while (strlen($num) > 0) {
            $number[0] .= $thousandsSep . substr($num, 0, 3);
            $num        = substr($num, 3);
        }
        $number[0] = substr(strrev($number[0]), 0, -1);

        if (isset($number[1])) {
            return $number[0] . $decPoint . $number[1];
        } else {
            return $number[0];
        }
    } else {
        return '0';
    }
}

function formatNumber($number, $color = false)
{
    $number = stringnumFormat($number, 0, ',', '.');

    if ($color === false) {
        return $number;
    }

    if ($color === true) {
        $color = 'red';
    }

    return '[color=' . $color . '][b]' . $number . '[/b][/color]';
}

// initialization of some variables
$totalDebris = 0;
$totalRaids  = 0;
?>
[align=center]De volgende vloten kwamen elkaar tegen op <?php
echo $this->time['date'];
if ($this->options['hideTime']) {
    echo ' --:--:--';
} else {
    echo ' ' . $this->time['time'];
}
?> , toen het tot een gevecht kwam:

<? /* the first round, attackers */ ?>
<? foreach ($this->rounds[0]['attackers'] as $slot): ?>
    [color=red][b]Aanvaller[/b][/color] (6) <?= $slot['player']['name'] ?> (6) ([X:XXX:XX])
    [color=blue]Wapens: XXX% Schilden: XXX% Romp beplating: XXX%[/color]
    [color=red]________________________________________________[/color]

    <? foreach ($slot['fleet'] as $ship => $number): ?>
        [color=white]<?= $ship ?> <?= formatNumber($number) ?>[/color]
    <? endforeach; ?>
    [color=blue]_________________________________________[/color]

<? endforeach; ?>

<? /* the first round */ ?>
<? foreach ($this->rounds[0]['defenders'] as $slot): ?>
    [color=#1C84BE][b]Verdediger[/b][/color]  8| <?= $slot['player']['name'] ?> 8| ([X:XXX:XX])
    [color=blue]Wapens: XXX% Schilden: XXX% Romp beplating: XXX%[/color]
    [color=red]________________________________________________[/color]

    <? foreach ($slot['fleet'] as $ship => $number): ?>
        [color=white]<?= $ship ?> <?= formatNumber($number) ?>[/color]
    <? endforeach; ?>
    [color=blue]_________________________________________[/color]

<? endforeach; ?>

<?= $this->options['middleText'] ?>



<?php
// make some simple calculations

$last = count($this->rounds) - 1;

/* the last round, attackers */ ?>
<? foreach ($this->rounds[$last]['attackers'] as $key => $slot): ?>
    [color=red][b]Aanvaller[/b][/color] (6) <?= $slot['player']['name'] ?> (6) ([X:XXX:XX])
    [color=red]________________________________________________[/color]

    <?php
    // calculations for the first round
    if (isset($this->rounds[0]['attackers'][$key])) {
        $oldSlot = $this->rounds[0]['attackers'][$key];

        if ($slot['player']['name'] != $oldSlot['player']['name']) {
            unset($oldSlot);
        }
    }
    ?>
    <? if (empty($slot['fleet'])): ?>
        [b]Vernietigd![/b]
    <? elseif(isset($oldSlot)): ?>
        <? foreach ($oldSlot['fleet'] as $ship => $number): ?>
            <? $slot['fleet'][$ship] = isset($slot['fleet'][$ship]) ? $slot['fleet'][$ship] : 0 ?>
            [color=white]<?= $ship ?> <?= formatNumber($slot['fleet'][$ship]) ?> [b]( -<?= formatNumber($number - $slot['fleet'][$ship]) ?> )[/b][/color]
        <? endforeach; ?>
    <? else: ?>
        <? foreach ($slot['fleet'] as $ship => $number): ?>
            [color=white]<?= $ship ?> <?= formatNumber($number) ?>[/color]
        <? endforeach; ?>
    <? endif; ?>
    [color=blue]_________________________________________[/color]
    <? unset($oldSlot) ?>

<? endforeach; ?>

<? /* the last round for the defenders */ ?>
<? foreach ($this->rounds[$last]['defenders'] as $key => $slot): ?>
    [color=#1C84BE][b]Verdediger[/b][/color] 8| <?= $slot['player']['name'] ?> 8| ([X:XXX:XX])
    [color=red]________________________________________________[/color]

    <?php
    // calculations for the first round
    if (isset($this->rounds[0]['defenders'][$key])) {
        $oldSlot = $this->rounds[0]['defenders'][$key];

        if ($slot['player']['name'] != $oldSlot['player']['name']) {
            unset($oldSlot);
        }
    }
    ?>
    <? if (empty($slot['fleet'])): ?>
        [b]Vernietigd![/b]
    <? elseif(isset($oldSlot)): ?>
        <? foreach ($oldSlot['fleet'] as $ship => $number): ?>
            <? $slot['fleet'][$ship] = isset($slot['fleet'][$ship]) ? $slot['fleet'][$ship] : 0 ?>
            [color=white]<?= $ship ?> <?= formatNumber($slot['fleet'][$ship]) ?> [b]( -<?= formatNumber($number - $slot['fleet'][$ship]) ?> )[/b][/color]
        <? endforeach; ?>
    <? else: ?>
        <? foreach ($slot['fleet'] as $ship => $number): ?>
            [color=white]<?= $ship ?> <?= formatNumber($number) ?>[/color]
        <? endforeach; ?>
    <? endif; ?>
    [color=blue]_________________________________________[/color]
    <? unset($oldSlot) ?>

<? endforeach; ?>

<? /* Make up the results */ ?>

<? if ($this->result['winner'] == Kokx_Parser_CrashReport::NONE): ?>
    Het gevecht eindigt in een remise.
<? elseif ($this->result['winner'] == Kokx_Parser_CrashReport::ATTACKER): ?>
    De aanvaller heeft het gevecht gewonnen!
<? else: ?>
    De verdediger heeft het gevecht gewonnen!
<? endif; ?>
De aanvaller steelt:
<? if ($this->result['winner'] == Kokx_Parser_CrashReport::ATTACKER): ?>
    <? $totalRaids += $this->result['stolen']['metal'] + $this->result['stolen']['crystal'] + $this->result['stolen']['deut'] ?>
    <?= formatNumber($this->result['stolen']['metal'], true) ?> Metaal, <?= formatNumber($this->result['stolen']['crystal'], true) ?> Kristal en <?= formatNumber($this->result['stolen']['deut'], true) ?> Deuterium
    <? foreach ($this->raids as $raid): ?>
        <? $totalRaids += $raid['metal'] + $raid['crystal'] + $raid['deut'] ?>
        <?= formatNumber($raid['metal'], true) ?> Metaal, <?= formatNumber($raid['crystal'], true) ?> Kristal en <?= formatNumber($raid['deut'], true) ?> Deuterium
    <? endforeach; ?>
<? else: ?>
    - Metaal, - Kristal en - Deuterium
<? endif; ?>

De aanvaller heeft een totaal van <?= formatNumber($this->result['attackerlosses'], true) ?> Eenheden verloren.
De verdediger heeft een totaal van [size=13]<?= formatNumber($this->result['defenderlosses'], 'white') ?>[/size] Eenheden verloren.
Op deze co√∂rdinaten in de ruimte zweven nu [size=13]<?= formatNumber($this->result['debris']['metal'], 'blue') ?>[/size] Metaal en [size=13]<?= formatNumber($this->result['debris']['crystal'], 'blue') ?>[/size] Kristal.
<? if ($this->result['moonchance'] > 0): ?>
    De kans dat een maan ontstaat uit het puin is <?= formatNumber($this->result['moonchance'], true) ?> %
<? endif; ?>

<? if (!empty($this->debris)): ?>
    <? foreach ($this->debris as $debris): ?>
        <? $totalDebris += $debris['metal'] + $debris['crystal'] ?>
        _____________________________________

        Je <?= formatNumber($debris['recs'], true) ?> recyclers hebben een totale opslagcapaciteit van <?= formatNumber($debris['storage'], true) ?>.
        In het bestemmingsveld zweven <?= formatNumber($debris['fieldmetal'], true) ?> metaal en <?= formatNumber($debris['fieldcrystal'], true) ?> kristal in de ruimte.
        Je hebt <?= formatNumber($debris['metal'], true) ?> metaal en <?= formatNumber($debris['crystal'], true) ?> kristal opgehaald.

        <? $percent = ($debris['metal'] + $debris['crystal']) / ($debris['fieldmetal'] + $debris['fieldcrystal']) * 100 ?>
        Opgehaald: [b][color=blue]<?= round($percent) ?>%[/color][/b]
    <? endforeach; ?>
    __________________________

    Er is een totaal van <?= formatNumber($totalDebris, true) ?> Eenheden puin opgehaald.
<? endif; ?>
<? if ($totalRaids > 0): ?>
    De aanvaller heeft een totaal van <?= formatNumber($totalRaids, true) ?> Eenheden gestolen.
<? endif; ?>
<? if ($this->result['winner'] == Kokx_Parser_CrashReport::ATTACKER): ?>
<?php
// calculate the result
$attackerResult = $totalDebris + $totalRaids - $this->result['attackerlosses'];
$defenderResult = $this->result['defenderlosses'];
?>
    __________________

    [color=blue][size=16][b]Totale samenvatting winst/verlies:[/b][/size][/color]
    De aanvaller heeft <?= formatNumber(abs($attackerResult), true) ?> Eenheden <?= ($attackerResult > 0) ? 'winst' : 'verlies' ?> gemaakt.
    De verdediger heeft <?= formatNumber($defenderResult, true) ?> Eenheden verlies gemaakt.
<? elseif ($this->result['winner'] == Kokx_Parser_CrashReport::NONE): ?>
<?php
// calculate the result
$attackerResult = $totalDebris + $totalRaids - $this->result['attackerlosses'];
$defenderResult = $this->result['defenderlosses'];
?>
    __________________

    [color=blue][size=16][b]Totale samenvatting winst/verlies:[/b][/size][/color]
    De aanvaller heeft <?= formatNumber(abs($attackerResult), true) ?> Eenheden <?= ($attackerResult > 0) ? 'winst' : 'verlies' ?> gemaakt.
    De verdediger heeft <?= formatNumber($defenderResult, true) ?> Eenheden verlies gemaakt.
<? else: ?>
<?php
// calculate the result
$attackerResult = $this->result['attackerlosses'];
$defenderResult = $totalDebris - $this->result['defenderlosses'];
?>
    __________________

    [color=#3183E7][size=16][b]Totale samenvatting winst/verlies:[/b][/size][/color]
    De aanvaller heeft <?= formatNumber($attackerResult, true) ?> Eenheden verlies gemaakt.
    De verdediger heeft <?= formatNumber(abs($defenderResult), true) ?> Eenheden <?= ($defenderResult > 0) ? 'winst' : 'verlies' ?> gemaakt.
<? endif; ?>

<? /* and a link to the Converter site*/ ?>
[size=10][url=<?= LINK ?>]Converted by Kokx's CR Converter <?= VERSION ?>  (skin: ViRuS)[/url][/size][/align]
