<?php
/**
 * This file is part of Kokx's CR Converter.
 *
 * Kokx's CR Converter is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Kokx's CR Converter is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Kokx's CR Converter.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @category   KokxConverter
 * @license    http://www.gnu.org/licenses/gpl.txt
 * @copyright  Copyright (c) 2009 Kokx
 * @package    Kokx_Render
 */

function stringnumFormat($number, $decimals = 0, $decPoint = '.', $thousandsSep = ',')
{
    if (is_int($number) || is_float($number)) {
        return number_format($number, $decimals, $decPoint, $thousandsSep);
    } elseif (is_string($number)) {
        $number = explode('.', $number);

        $num       = strrev($number[0]);
        $number[0] = '';

        while (strlen($num) > 0) {
            $number[0] .= $thousandsSep . substr($num, 0, 3);
            $num        = substr($num, 3);
        }
        $number[0] = substr(strrev($number[0]), 0, -1);

        if (isset($number[1])) {
            return $number[0] . $decPoint . $number[1];
        } else {
            return $number[0];
        }
    } else {
        return '0';
    }
}

function formatNumber($number, $color = false)
{
	$number = stringnumFormat($number, 0, ',', '.');

	if ($color === false) {
	    return $number;
	}

	if ($color === true) {
	    $color = '#3183E7';
	}

	return '[color=' . $color . '][b]' . $number . '[/b][/color]';
}

// initialization of some variables
$totalDebris = 0;
$totalRaids  = 0;
?>
[align=center]De volgende vloten kwamen elkaar tegen op <?php
$time = $this->report->getTime();
if ($this->settings['hide_time']) {
    echo $time->format('d-m-Y --:--:--');
} else {
    echo $time->format('d-m-Y H:i:s');
}

$rounds = $this->report->getRounds();
?> , toen het tot een gevecht kwam:

<? /* the first round, attackers */ ?>
<? foreach ($rounds[0]->getAttackers() as $fleet): ?>
    [color=red][b]Aanvaller[/b][/color] <?= $fleet->getPlayer() . "\n" ?>
    [color=red]________________________________________________[/color]

    <? foreach ($fleet->getShips() as $ship): ?>
        [color=#FC850C]<?= $ship->getName() ?> <?= formatNumber($ship->getCount()) ?>[/color]
    <? endforeach; ?>
    [color=red]_________________________________________[/color]

<? endforeach; ?>

<? /* the first round */ ?>
<? foreach ($rounds[0]->getDefenders() as $fleet): ?>
    [color=green][b]Verdediger[/b][/color] <?= $fleet->getPlayer() . "\n" ?>
    [color=green]________________________________________________[/color]

    <? foreach ($fleet->getShips() as $ship): ?>
        [color=#1C84BE]<?= $ship->getName() ?> <?= formatNumber($ship->getCount()) ?>[/color]
    <? endforeach; ?>
    [color=green]_________________________________________[/color]

<? endforeach; ?>

<?= $this->settings['middle_text'] ?>



<?php
// make some simple calculations

$last = count($rounds) - 1;

$firstRound = $rounds[0]->getAttackers();

/* the last round, attackers */ ?>
<? foreach ($rounds[$last]->getAttackers() as $key => $fleet): ?>
    [color=red][b]Aanvaller[/b][/color] <?= $fleet->getPlayer() . "\n" ?>
    [color=red]________________________________________________[/color]

    <?php
    // calculations for the first round
    if (isset($firstRound[$key])) {
        $oldFleet = $firstRound[$key];

        if ($oldFleet->getPlayer() != $fleet->getPlayer() . "\n") {
            unset($oldFleet);
        }
    }
    $ships = $fleet->getShips();
    ?>
    <? if (count($fleet->getShips()) < 1): ?>
    	[b]Vernietigd![/b]
    <? elseif(isset($oldFleet)): ?>
    	<? foreach ($oldFleet->getShips() as $ship): ?>
            <? $newCount = ($fleet->getShip($ship->getName()) != null) ? $fleet->getShip($ship->getName())->getCount() : 0;  ?>
            [color=#FC850C]<?= $ship->getName(); ?> <?= formatNumber($ship->getCount()) ?> [b]( -<?= formatNumber($ship->getCount() - $newCount) ?> )[/b][/color]
        <? endforeach; ?>
    <? else: ?>
        <? foreach ($fleet as $ship): ?>
            [color=#FC850C]<?= $ship->getName() ?> <?= formatNumber($ship->getCount()) ?>[/color]
        <? endforeach; ?>
    <? endif; ?>
    [color=red]_________________________________________[/color]
    <? unset($oldFleet) ?>

<? endforeach; ?>

<?php
/* the last round for the defenders */ 
$firstRound = $rounds[0]->getDefenders();
?>
<? foreach ($rounds[$last]->getDefenders() as $key => $fleet): ?>
    [color=green][b]Verdediger[/b][/color] <?= $fleet->getPlayer() . "\n" ?>
    [color=green]________________________________________________[/color]

    <?php
    // calculations for the first round
    if (isset($firstRound[$key])) {
        $oldFleet = $firstRound[$key];

        if ($oldFleet->getPlayer() != $fleet->getPlayer()) {
            unset($oldFleet);
        }
    }
    ?>
    <? if (count($fleet->getShips()) < 1): ?>
    	[b]Vernietigd![/b]
    <? elseif(isset($oldFleet)): ?>
    	<? foreach ($oldFleet->getShips() as $ship): ?>
            <? $newCount = ($fleet->getShip($ship->getName()) != null) ? $fleet->getShip($ship->getName())->getCount() : 0;  ?>
            [color=#1C84AE]<?= $ship->getName(); ?> <?= formatNumber($ship->getCount()) ?> [b]( -<?= formatNumber($ship->getCount() - $newCount) ?> )[/b][/color]
        <? endforeach; ?>
    <? else: ?>
        <? foreach ($fleet as $ship): ?>
            [color=#1C84AE]<?= $ship->getName() ?> <?= formatNumber($ship->getCount()) ?>[/color]
        <? endforeach; ?>
    <? endif; ?>
    [color=green]_________________________________________[/color]
    <? unset($oldFleet) ?>

<? endforeach; ?>

<? /* Make up the results */ ?>

<? if ($this->report->getWinner() == Default_Model_CombatReport::DRAW): ?>
	Het gevecht eindigt in een remise.
<? elseif ($this->report->getWinner() == Default_Model_CombatReport::ATTACKER): ?>
	De aanvaller heeft het gevecht gewonnen!
<? else: ?>
	De verdediger heeft het gevecht gewonnen!
<? endif; ?>
De aanvaller steelt:
<? if ($this->report->getWinner() == Default_Model_CombatReport::ATTACKER): ?>
	<? $totalRaids += $this->report->getMetal() + $this->report->getCrystal() + $this->report->getDeuterium() ?>
	<?= formatNumber($this->report->getMetal(), true) ?> Metaal, <?= formatNumber($this->report->getCrystal(), true) ?> Kristal en <?= formatNumber($this->report->getDeuterium(), true) ?> Deuterium
	<? foreach ($this->report->getRaids() as $raid): ?>
		<? $totalRaids += $raid['metal'] + $raid['crystal'] + $raid['deut'] ?>
	    <?= formatNumber($raid['metal'], true) ?> Metaal, <?= formatNumber($raid['crystal'], true) ?> Kristal en <?= formatNumber($raid['deut'], true) ?> Deuterium
	<? endforeach; ?>
<? else: ?>
	- Metaal, - Kristal en - Deuterium
<? endif; ?>

De aanvaller heeft een totaal van <?= formatNumber($this->report->getLossesAttacker(), true) ?> Eenheden verloren.
De verdediger heeft een totaal van <?= formatNumber($this->report->getLossesDefender(), true) ?> Eenheden verloren.
Op deze co√∂rdinaten in de ruimte zweven nu <?= formatNumber($this->report->getDebrisMetal(), true) ?> Metaal en <?= formatNumber($this->report->getDebrisCrystal(), true) ?> Kristal.
<? if ($this->report->getMoonChance() > 0): ?>
	De kans dat een maan ontstaat uit het puin is <?= formatNumber($this->report->getMoonChance(), true) ?> %
<? endif; ?>

<? if (!empty($this->debris)): ?>
	<? foreach ($this->debris as $debris): ?>
		<? $totalDebris += $debris['metal'] + $debris['crystal'] ?>
		_____________________________________

		Je <?= formatNumber($debris['recs'], '#FC850C') ?> recyclers hebben een totale opslagcapaciteit van <?= formatNumber($debris['storage'], '#FC850C') ?>.
		In het bestemmingsveld zweven <?= formatNumber($debris['fieldmetal'], '#FC850C') ?> metaal en <?= formatNumber($debris['fieldcrystal'], '#FC850C') ?> kristal in de ruimte.
		Je hebt <?= formatNumber($debris['metal'], '#FC850C') ?> metaal en <?= formatNumber($debris['crystal'], '#FC850C') ?> kristal opgehaald.

		<? $percent = ($debris['metal'] + $debris['crystal']) / ($debris['fieldmetal'] + $debris['fieldcrystal']) * 100 ?>
		Opgehaald: [b][color=#3183E7]<?= round($percent) ?>%[/color][/b]
    <? endforeach; ?>
    __________________________

	Er is een totaal van <?= formatNumber($totalDebris, '#FC850C') ?> Eenheden puin opgehaald.
<? endif; ?>
<? if ($totalRaids > 0): ?>
	De aanvaller heeft een totaal van <?= formatNumber($totalRaids, '#FC850C') ?> Eenheden gestolen.
<? endif; ?>
<? if ($this->report->getWinner() == Default_Model_CombatReport::ATTACKER): ?>
<?php
// calculate the result
$attackerResult = $totalDebris + $totalRaids - $this->report->getLossesAttacker();
$defenderResult = $this->report->getLossesDefender();
?>
	__________________

	[color=#3183E7][size=16][b]Totale samenvatting winst/verlies:[/b][/size][/color]
	De aanvaller heeft <?= formatNumber(abs($attackerResult), '#FC850C') ?> Eenheden <?= ($attackerResult > 0) ? 'winst' : 'verlies' ?> gemaakt.
	De verdediger heeft <?= formatNumber($defenderResult, '#FC850C') ?> Eenheden verlies gemaakt.
<? elseif ($this->report->getWinner() == Default_Model_CombatReport::DRAW): ?>
<?php
// calculate the result
$attackerResult = $totalDebris + $totalRaids - $this->report->getLossesAttacker();
$defenderResult = $this->report->getLossesDefender();
?>
    __________________

    [color=#3183E7][size=16][b]Totale samenvatting winst/verlies:[/b][/size][/color]
    De aanvaller heeft <?= formatNumber(abs($attackerResult), '#FC850C') ?> Eenheden <?= ($attackerResult > 0) ? 'winst' : 'verlies' ?> gemaakt.
    De verdediger heeft <?= formatNumber($defenderResult, '#FC850C') ?> Eenheden verlies gemaakt.
<? else: ?>
<?php
// calculate the result
$attackerResult = $this->report->getLossesAttacker();
$defenderResult = $totalDebris - $this->report->getLossesDefender();
?>
	__________________

	[color=#3183E7][size=16][b]Totale samenvatting winst/verlies:[/b][/size][/color]
	De aanvaller heeft <?= formatNumber($attackerResult, '#FC850C') ?> Eenheden verlies gemaakt.
	De verdediger heeft <?= formatNumber(abs($defenderResult), '#FC850C') ?> Eenheden <?= ($defenderResult > 0) ? 'winst' : 'verlies' ?> gemaakt.
<? endif; ?>

<? /* and a link to the Converter site*/ ?>
[size=10][url=<?= LINK ?>]Converted by Kokx's CR Converter <?= VERSION ?> (skin: kokx)[/url][/size][/align]
